import streamlit as st
import time  
st.set_page_config(page_title="Aquaponics 101", page_icon="ЁЯМ┐", layout="wide")
st.markdown(
    """
    <style>
    .stApp {
        background-image: 
            linear-gradient(135deg, rgba(30,50,100,0.8) 0%, rgba(50,180,60,0.8) 100%),
            url("https://www.transparenttextures.com/patterns/paper-fibers.png");
        background-attachment: fixed;
        background-size: cover;
        color: white;
    }
    .stMarkdown a {
        color: #32CD32;  /* Keep link color */
    }
    .big-font {
        font-size: 22px;
        color: white;  /* Changed to default color */
    }
    .small-font {
        font-size: 18px;
        color: white;  /* Changed to default color */
    }
    .center {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .stImage {
        border-radius: 10px;
        border: 2px solid #32CD32;
    }
    .fade-in {
        animation: fadeIn 1s ease-in-out;
    }
    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
    </style>
    """,
    unsafe_allow_html=True
)
content = {
    "english": {
        "title": "ЁЯМ┐ Aquaponics: The Future of Sustainable Farming ЁЯРЯ",
        "definition": """
        Aquaponics is a sustainable method of farming that merges *aquaculture* (raising fish) and *hydroponics* (growing plants without soil). In this ecosystem:
        - Fish produce nutrient-rich waste.
        - Plants absorb these nutrients, cleaning the water for the fish.
        It's an amazing cycle of life! ЁЯМ▒ЁЯРа
        """,
        "how_it_works": [
            "Fish release waste into the water.",
            "Bacteria convert waste into nutrients for plants.",
            "Plants filter and clean the water.",
            "Clean water is pumped back to the fish tank."
        ],
        "benefits": [
            "ЁЯТз *Water Conservation:* Uses 90% less water than traditional farming.",
            "ЁЯМ▒ *No Chemical Fertilizers:* Fish provide natural nutrients for plants.",
            "ЁЯУЖ *Year-Round Production:* Can be operated in any season with controlled environments.",
            "ЁЯФД *Recycling:* Efficiently reuses water, reducing waste.",
            "ЁЯН╜ *Dual Production:* Grows both fish and fresh produce in one system."
        ],
        "components": {
            "Fish Tank": "The tank where fish live and produce nutrient-rich waste.",
            "Grow Beds": "Beds where plants grow and absorb nutrients from fish waste.",
            "Water Pump": "Circulates water between the fish tank and grow beds.",
            "Filtration System": "Filters solid waste and aerates water for fish."
        },
        "types": {
            "1. Media-Based Aquaponics": "Utilizes a solid medium, like gravel or clay pellets, for plant roots.",
            "2. Nutrient Film Technique (NFT)": "Involves a thin film of nutrient-rich water flowing over plant roots.",
            "3. Deep Water Culture (DWC)": "Plants float on rafts in a nutrient-rich solution with their roots submerged.",
            "4. Vertical Aquaponics": "Incorporates vertical growing systems to maximize space usage.",
            "5. Hybrid Aquaponics": "Combines elements from different systems for improved efficiency."
        },
        "footer": "ЁЯМ╛ Join the #SustainableFarming Revolution! ЁЯМ╛",
        "final_text": "ЁЯУК Your Sustainable Journey Starts Now! Tracking your progress in sustainability is important. Check how far youтАЩve come:"
    },
    "tamil": {
        "title": "ЁЯМ┐ роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ: роиро┐ро▓рпИропро╛рой ро╡рпЗро│ро╛рогрпНроорпИропро┐ройрпН роОродро┐ро░рпНроХро╛ро▓роорпН ЁЯРЯ",
        "definition": """
        роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ роОройрпНрокродрпБ *роорпАройрпН ро╡ро│ро░рпНрокрпНрокрпБ* рооро▒рпНро▒рпБроорпН *роорогрпНрогро┐ро▓рпН роЗро▓рпНро▓ро╛рооро▓рпН родро╛ро╡ро░роЩрпНроХро│рпИ ро╡ро│ро░рпНрокрпНрокродрпБ* роЖроХро┐ропро╡ро▒рпНро▒рпИрокрпН рокрпЖро▒рпНро▒рпБро│рпНро│ роиро┐ро▓рпИропро╛рой ро╡ро┐ро╡роЪро╛роп роорпБро▒рпИ роЖроХрпБроорпН. роЗроирпНрод ╤Н╨║╨╛╤Бро┐ро╕рпНроЯродрпНродро┐ро▓рпН:
        - роорпАройрпНроХро│рпН роКроЯрпНроЯроЪрпНроЪродрпНродрпБро│рпНро│ роХро┤ро┐ро╡рпБроХро│рпИ роЙро▒рпНрокродрпНродро┐ роЪрпЖропрпНроХро┐ройрпНро▒рой.
        - родро╛ро╡ро░роЩрпНроХро│рпН роЗроирпНрод роКроЯрпНроЯроЪрпНроЪродрпНродрпБроХро│рпИ роЙро▒ро┐роЮрпНроЪро┐роХрпНроХрпКрогрпНроЯрпБ, роорпАройрпНроХро│рпБроХрпНроХрпБ роирпАро░рпИ роЪрпБродрпНродроорпН роЪрпЖропрпНроХро┐ройрпНро▒рой.
        роЗродрпБ роТро░рпБ роЕро▒рпНрокрпБродрооро╛рой ро╡ро╛ро┤рпНроХрпНроХрпИропро┐ройрпН роЪрпБро▒рпНро▒родрпНродрпИ роЙро░рпБро╡ро╛роХрпНроХрпБроХро┐ро▒родрпБ! ЁЯМ▒ЁЯРа
        """,
        "how_it_works": [
            "роорпАройрпНроХро│рпН роирпАро▓ро┐ро▓рпН роХро┤ро┐ро╡рпБроХро│рпИ ро╡рпЖро│ро┐ропро┐роЯрпБроХро┐ройрпНро▒рой.",
            "рокро╛роХрпНроЯрпАро░ро┐ропро╛ роХро┤ро┐ро╡рпБроХро│рпИ родро╛ро╡ро░роЩрпНроХро│рпБроХрпНроХрпБ роКроЯрпНроЯроЪрпНроЪродрпНродрпБроХрпНроХро│ро╛роХ рооро╛ро▒рпНро▒рпБроХро┐ройрпНро▒рой.",
            "родро╛ро╡ро░роЩрпНроХро│рпН роирпАро░рпИ роЪрпБродрпНродроорпН роЪрпЖропрпНроХро┐ройрпНро▒рой.",
            "роЪрпБродрпНродрооро╛рой роирпАро░рпН роорпАройрпН родрпКроЯрпНроЯро┐роХрпНроХрпБ роорпАрогрпНроЯрпБроорпН родро│рпНро│рокрпНрокроЯрпБроХро┐ро▒родрпБ."
        ],
        "benefits": [
            "ЁЯТз *роирпАро░рпН роЪрпЗрооро┐рокрпНрокрпБ:* рокро╛ро░роорпНрокро░ро┐роп ро╡ро┐ро╡роЪро╛ропродрпНродро┐ро▒рпНроХрпБ ро╡ро┐роЯ 90% роХрпБро▒рпИро╡ро╛рой роирпАро░рпИ рокропройрпНрокроЯрпБродрпНродрпБроХро┐ро▒родрпБ.",
            "ЁЯМ▒ *ро░роЪро╛ропрой роЙро░роЩрпНроХро│рпБроХрпНроХрпБ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ:* роорпАройрпНроХро│рпН родро╛ро╡ро░роЩрпНроХро│рпБроХрпНроХрпБ роЗропро▒рпНроХрпИропро╛рой роКроЯрпНроЯроЪрпНроЪродрпНродрпБроХрпНроХро│рпИ ро╡ро┤роЩрпНроХрпБроХро┐ройрпНро▒рой.",
            "ЁЯУЖ *ро╡ро░рпБроЯродрпНродро┐ройрпН роорпБро┤рпБ роХро╛ро▓родрпНродро┐ройрпН роЙро▒рпНрокродрпНродро┐:* роХроЯрпНроЯрпБрокрпНрокро╛роЯрпНроЯро┐ро▓рпН роЙро│рпНро│ роЪрпВро┤ро▓ро┐ро▓рпН роОроирпНрод рокро░рпБро╡родрпНродро┐ро▓рпБроорпН роЗропроХрпНроХро▓ро╛роорпН.",
            "ЁЯФД *рооро▒рпБроЪрпБро┤ро▒рпНроЪро┐:* роирпАро░рпИ родро┐ро▒роорпНрокроЯ роорпАрогрпНроЯрпБроорпН рокропройрпНрокроЯрпБродрпНродрпБроХро┐ро▒родрпБ, роХро┤ро┐ро╡рпБроХро│рпИ роХрпБро▒рпИроХрпНроХрпБроорпН.",
            "ЁЯН╜ *роЗро░роЯрпНроЯрпИ роЙро▒рпНрокродрпНродро┐:* роорпАройрпНроХро│рпН рооро▒рпНро▒рпБроорпН рокрпБродро┐роп ро╡ро┐ро│рпИроЪрпНроЪро▓рпНроХро│рпИ роТро░рпЗ роЕроорпИрокрпНрокро┐ро▓рпН ро╡ро│ро░рпНроХрпНроХро┐ро▒родрпБ."
        ],
        "components": {
            "роорпАройрпН родрпКроЯрпНроЯро┐": "роорпАройрпНроХро│рпН ро╡ро╛ро┤рпНроирпНродрпБ роКроЯрпНроЯроЪрпНроЪродрпНродрпБро│рпНро│ роХро┤ро┐ро╡рпБроХро│рпИ роЙро▒рпНрокродрпНродро┐ роЪрпЖропрпНропрпБроорпН родрпКроЯрпНроЯро┐.",
            "ро╡ро│ро░рпНрокрпНрокрпБ рокроЯрпБроХрпНроХрпИроХро│рпН": "родро╛ро╡ро░роЩрпНроХро│рпН ро╡ро│ро░рпНроирпНродрпБ роорпАройрпН роХро┤ро┐ро╡рпБроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ роКроЯрпНроЯроЪрпНроЪродрпНродрпБроХро│рпИ роЙро▒ро┐роЮрпНроЪрпБроорпН роЗроЯроЩрпНроХро│рпН.",
            "роирпАро░рпНрокрпНрокроорпНрокрпН": "роорпАройрпН родрпКроЯрпНроЯро┐ рооро▒рпНро▒рпБроорпН ро╡ро│ро░рпНрокрпНрокрпБ рокроЯрпБроХрпНроХрпИроХро│рпН роЗроЯрпИропрпЗ роирпАро░рпИ роЪрпБро┤ро▓рпНродрпНродрпБроХро┐ро▒родрпБ.",
            "рооро╛роЪрпБ роирпАроХрпНроХрпБродро▓рпН роорпБро▒рпИ": "роХроЯрпБроорпИропро╛рой роХро┤ро┐ро╡рпБроХро│рпИ ро╡роЯро┐роХроЯрпНроЯрпБроХро┐ро▒родрпБ рооро▒рпНро▒рпБроорпН роорпАройрпНроХро│рпБроХрпНроХрпБ роирпАро░рпИ роХро╛ро▒рпНро▒рпЛроЯрпНроЯроорпН роЪрпЖропрпНроХро┐ро▒родрпБ."
        },
        "types": {
            "1. рооро┐родро┐ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ": "родро╛ро╡ро░ро░рпБродрпНродрпБ роорпИропрооро╛роХ роХро▒рпНроХро│рпН роЕро▓рпНро▓родрпБ clay рокроирпНродрпБ рокрпЛройрпНро▒ роТро░рпБ рооро┐родро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроХро┐ро▒родрпБ.",
            "2. роКроЯрпНроЯроЪрпНроЪродрпНродрпБрокрпН рокроЯро▓роорпН родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокроорпН (NFT)": "родро╛ро╡ро░ро░рпБродрпНродрпБроХро│ро┐ро▓рпН роКроЯрпНроЯроЪрпНроЪродрпНродрпБро│рпНро│ роирпАро░рпН рооро┐родро┐роирпНрод рокроЯро▓рооро╛роХ роУроЯрпБроХро┐ро▒родрпБ.",
            "3. роЖро┤ роирпАро░рпН роХро▓ро╡рпИроХрпН родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокроорпН (DWC)": "родро╛ро╡ро░роЩрпНроХро│рпН рокроЯроХрпБ ро╡роЯро┐ро╡ро┐ро▓рпН роиро┐ро▒рпНроХрпБроорпН роКроЯрпНроЯроЪрпНроЪродрпНродрпБро│рпНро│ роирпАро░ро┐ройрпН роЖро┤родрпНродро┐ро▓рпН роЗро░рпБроХрпНроХро┐ройрпНро▒рой.",
            "4. роПро▒роХрпНроХрпБро▒рпИроп роЙро│рпНро│ роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ": "роЗроЯродрпНродрпИ роЕродро┐роХрокрпНрокроЯро┐ропро╛рой рокропройроЯрпИроп рокрпБродро┐роп роорпВро▓родройроЩрпНроХро│рпИроЪрпН роЪрпЗро░рпНроХрпНроХро┐ро▒родрпБ.",
            "5. роХро▓ро╡рпИропро╛рой роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ": "роЪро┐ро▒роирпНрод роЪрпЖропро▓рпНродро┐ро▒ройрпИ роорпБройрпНройрпЗро▒рпНро▒ роХро▓ро╡рпИропро╛роХрпНроХрпБроорпН ро╡роХрпИропро┐ро▓рпН."
        },
        "footer": "ЁЯМ╛ #роиро┐ро▓рпИропро╛ройро╡ро┐ро╡роЪро╛ропроорпН рооро╛ро▒рпНро▒родрпНродрпИ роЗрогрпИроХрпНроХро╡рпБроорпН! ЁЯМ╛",
        "final_text": "ЁЯУК роЙроЩрпНроХро│рпН роиро┐ро▓рпИропро╛рой рокропрогроорпН роЗройрпНро▒рпБ родрпКроЯроЩрпНроХрпБроХро┐ро▒родрпБ! роЙроЩрпНроХро│рпН роиро┐ро▓рпИродрпНродройрпНроорпИроХрпНроХрпБ роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИ роХрогрпНроХро╛рогро┐роХрпНроХ роорпБроХрпНроХро┐ропроорпН. роирпАроЩрпНроХро│рпН роОро╡рпНро╡ро│ро╡рпБ роорпБройрпНройрпЗро▒ро┐ропро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН роОройрпНрокродрпИрокрпН рокро╛ро░рпБроЩрпНроХро│рпН:"
    }
}
lang = st.sidebar.radio("Select Language / роорпКро┤ро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН", ["English", "родрооро┐ро┤рпН"])
lang_key = 'english' if lang == 'English' else 'tamil'
st.markdown(f"<h1 class='fade-in'>{content[lang_key]['title']}</h1>", unsafe_allow_html=True)
st.header("What is Aquaponics? ЁЯдФ" if lang_key == 'english' else "роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ роОройрпНрой? ЁЯдФ")
st.markdown(content[lang_key]["definition"], unsafe_allow_html=True)
st.header("ЁЯФД How Aquaponics Works (Animated)" if lang_key == 'english' else "ЁЯФД роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокрпБ роОро╡рпНро╡ро╛ро▒рпБ роЪрпЖропро▓рпНрокроЯрпБроХро┐ро▒родрпБ (роОрогрпНрогро┐роХрпНроХрпИ)")
steps = content[lang_key]["how_it_works"]
progress_bar = st.progress(0)
step_text = st.empty()
for i, step in enumerate(steps):
    progress_bar.progress((i + 1) * 25)
    step_text.markdown(f"<p class='small-font fade-in'>{step}</p>", unsafe_allow_html=True)
    time.sleep(1)
progress_bar.empty()
step_text.markdown("<p class='small-font fade-in'>Aquaponics is a beautifully symbiotic cycle! ЁЯМН</p>", unsafe_allow_html=True)
st.header("ЁЯМЯ Benefits of Aquaponics" if lang_key == 'english' else "ЁЯМЯ роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокро┐ройрпН роиройрпНроорпИроХро│рпН")
for benefit in content[lang_key]["benefits"]:
    st.markdown(f"<p class='small-font fade-in'>{benefit}</p>", unsafe_allow_html=True)
st.header("ЁЯФз Key Components" if lang_key == 'english' else "ЁЯФз роорпБроХрпНроХро┐роп роХрпВро▒рпБроХро│рпН")
for component, description in content[lang_key]["components"].items():
    st.markdown(f"<strong>{component}</strong>: {description}", unsafe_allow_html=True)
st.header("ЁЯФН Types of Aquaponics" if lang_key == 'english' else "ЁЯФН роирпАро░рпНро╡ро│ ро╡ро│ро░рпНрокрпНрокро┐ройрпН ро╡роХрпИроХро│рпН")
for type_, description in content[lang_key]["types"].items():
    st.markdown(f"<p class='small-font fade-in'>{type_}: {description}</p>", unsafe_allow_html=True)
st.markdown(f"<h4 class='fade-in'>{content[lang_key]['footer']}</h4>", unsafe_allow_html=True)
st.markdown(f"<p class='small-font fade-in'>{content[lang_key]['final_text']}</p>", unsafe_allow_html=True)